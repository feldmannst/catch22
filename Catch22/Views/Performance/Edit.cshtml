@model Catch22.Models.Performance

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_CMSLayout.cshtml";
}

<div class="row">
    <div class="col-md-6">
        <h2>Edit Performance</h2>
        @using (Html.BeginForm("Edit", "Performance", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.PerformanceID)

            <div class="form-group">
                @Html.LabelFor(model => model.PerformanceName, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.PerformanceName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PerformanceName)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PerformanceDate, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.PerformanceDate, new { @class = "form-control datepicker" })
                @Html.ValidationMessageFor(model => model.PerformanceDate)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PerformanceTime, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.PerformanceTime, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PerformanceTime)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Location, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Location)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Details, new { @class = "form-control", rows="3" })
                @Html.ValidationMessageFor(model => model.Details)
            </div>
            <input type="submit" value="Save" class="btn btn-default" />
        }
        <a href="@Url.Action("Index", "Performance")">Back to all Performances</a>
    </div>
</div>